<JINJA>
---need to trim the leading and tailing spaces of the query
WITH raw_data AS (
    SELECT
        LOWER(TRIM(query)) AS query,
        userid
    FROM intern_search_interaction:infrastructure
    WHERE
        event = 'query'
        {% if '$start_date1$' and '$end_date1$' %}
            AND ds BETWEEN '$start_date1$' AND '$end_date1$'
        {% endif %}
        {% if '$keyword$' %}
            AND LOWER(TRIM(query)) LIKE LOWER(TRIM('%$keyword$%'))
        {% endif %}
        {% if '$exclude$' %}
            AND LOWER(TRIM(query)) NOT LIKE LOWER(TRIM('%$exclude$%'))
        {% endif %}
),
employee AS (
    SELECT
        personal_fbid,
        pillar_name,
        team_name,
        team_group_name,
        department_name,
        department_group_name
    FROM d_employee_plus:hr
    WHERE
        1 = 1
        AND ds = '<LATEST_DS:d_employee_plus:hr>'
),
joined AS (
    SELECT
        a.userid,
        a.query,
        b.team_name,
        b.team_group_name,
        b.department_name,
        CASE
            WHEN team_group_name = 'EIS Core Interfaces & Data Services' THEN 'Yes'
            ELSE 'No'
        END AS is_CIDS
    FROM raw_data AS a
    LEFT JOIN employee AS b
        ON a.userid = b.personal_fbid
),
final AS (
    SELECT
        query,
        is_CIDS,
        COUNT(userid) AS hits,
        ROUND(
            COUNT(userid) * 1.0 / SUM(COUNT(userid)) OVER (
                PARTITION BY
                    query
            ) * 1.0,
            4
        ) * 100 AS pct_search_hits,
        SUM(COUNT(userid)) OVER (
            PARTITION BY
                query
        ) AS sum_hits,
        COUNT(DISTINCT userid) AS count_user,
        ROUND(
            COUNT(DISTINCT userid) * 1.0 / SUM(COUNT(DISTINCT userid)) OVER (
                PARTITION BY
                    query
            ) * 1.0,
            4
        ) * 100 AS pct_search_users,
        SUM(COUNT(DISTINCT userid)) OVER (
            PARTITION BY
                query
        ) AS sum_user
    FROM joined
    GROUP BY
        query,
        is_CIDS
    ORDER BY
        query,
        is_CIDS
),
parallel AS (
    SELECT
        a.query AS query,
        a.is_CIDS AS y_is_CIDS,
        a.hits AS y_hits,
        a.pct_search_hits AS y_pct_search_hits,
        a.count_user AS y_count_user,
        a.pct_search_users AS y_pct_search_users,
        b.is_CIDS AS n_is_CIDS,
        b.hits AS n_hits,
        b.pct_search_hits AS n_pct_search_hits,
        b.count_user AS n_count_user,
        b.pct_search_users AS n_pct_search_users,
        a.sum_hits AS sum_hits,
        a.sum_user AS sum_user_by_query
    FROM final AS a
    JOIN final AS b
        ON a.query = b.query
        AND a.is_CIDS = 'Yes'
        AND a.is_CIDS != b.is_CIDS
)
---here, if you select 'all', it means the query need to be appear both in is CIDS and out CIDS range.
{% if "$scope$" == 'ALL' %}
    SELECT
        *
    FROM parallel
{% endif %}
{% if "$scope$" == 'Yes' %}
    SELECT
        *
    FROM final
    WHERE
        is_CIDS = 'Yes'
{% endif %}
{% if "$scope$" == 'No' %}
    SELECT
        *
    FROM final
    WHERE
        is_CIDS = 'No'
{% endif %}
</JINJA>
